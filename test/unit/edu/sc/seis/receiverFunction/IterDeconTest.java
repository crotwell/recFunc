package edu.sc.seis.receiverFunction;

import junit.framework.TestCase;
// JUnitDoclet begin import
import edu.sc.seis.receiverFunction.IterDecon;
// JUnitDoclet end import

/**
* Generated by JUnitDoclet, a tool provided by
* ObjectFab GmbH under LGPL.
* Please see www.junitdoclet.org, www.gnu.org
* and www.objectfab.de for informations about
* the tool, the licence and the authors.
*/


public class IterDeconTest
// JUnitDoclet begin extends_implements
extends TestCase
// JUnitDoclet end extends_implements
{
  // JUnitDoclet begin class
  edu.sc.seis.receiverFunction.IterDecon iterdecon = null;
  // JUnitDoclet end class
  
  public IterDeconTest(String name) {
    // JUnitDoclet begin method IterDeconTest
    super(name);
    // JUnitDoclet end method IterDeconTest
  }
  
  public edu.sc.seis.receiverFunction.IterDecon createInstance() throws Exception {
    // JUnitDoclet begin method testcase.createInstance
      return new edu.sc.seis.receiverFunction.IterDecon(100, false, .0001f, 3);
    // JUnitDoclet end method testcase.createInstance
  }
  
  protected void setUp() throws Exception {
    // JUnitDoclet begin method testcase.setUp
    super.setUp();
    iterdecon = createInstance();
    // JUnitDoclet end method testcase.setUp
  }
  
  protected void tearDown() throws Exception {
    // JUnitDoclet begin method testcase.tearDown
    iterdecon = null;
    super.tearDown();
    // JUnitDoclet end method testcase.tearDown
  }
  
  public void testProcess() throws Exception {
    // JUnitDoclet begin method process
    // JUnitDoclet end method process
  }
  
  public void testPhaseShift() throws Exception {
    // JUnitDoclet begin method phaseShift
    // JUnitDoclet end method phaseShift
  }
  
  public void testNextPowerTwo() throws Exception {
    // JUnitDoclet begin method phaseShift
      assertEquals(iterdecon.nextPowerTwo(3), 4);
      assertEquals(iterdecon.nextPowerTwo(4), 4);
      assertEquals(iterdecon.nextPowerTwo(1025), 2048);
    // JUnitDoclet end method phaseShift
  }
  
  public void testGaussianFilter() throws Exception {
    // JUnitDoclet begin method phaseShift
      float[] tmp = new float[100];
      for ( int i=0; i<tmp.length; i++) {
          tmp[i] = 10;
      } // end of for ()
      
      float[] out = iterdecon.gaussianFilter(tmp, 3.0f, 0.05f);
      for ( int i=0; i<out.length; i++) {
          System.out.println(i+"  tmp="+tmp[i]+"  out="+out[i]);
      } // end of for ()
      
    // JUnitDoclet end method phaseShift
  }
  
  
  
  /**
  * JUnitDoclet moves marker to this method, if there is not match
  * for them in the regenerated code and if the marker is not empty.
  * This way, no test gets lost when regenerating after renaming.
  * Method testVault is supposed to be empty.
  */
  public void testVault() throws Exception {
    // JUnitDoclet begin method testcase.testVault
    // JUnitDoclet end method testcase.testVault
  }
  
  public static void main(String[] args) {
    // JUnitDoclet begin method testcase.main
    junit.textui.TestRunner.run(IterDeconTest.class);
    // JUnitDoclet end method testcase.main
  }
}
