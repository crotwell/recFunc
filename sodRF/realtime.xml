<?xml version="1.0" ?>
<sod xmlns:xlink="http://www.w3.org/1999/xlink/">
    <properties>
        <runName>RealTime RecFunc</runName>
        <statusBase>status</statusBase>
        <eventQueryIncrement>
            <value>1</value>
            <unit>WEEK</unit>
        </eventQueryIncrement>
        <eventLag>
            <value>8</value>
            <unit>WEEK</unit>
        </eventLag>
        <eventRefreshInterval>
            <value>9</value>
            <unit>MINUTE</unit>
        </eventRefreshInterval>
        <waveformWorkerThreads>2</waveformWorkerThreads>
        <maxRetryDelay>
            <value>6</value>
            <unit>WEEK</unit>
        </maxRetryDelay>
        <statusPages>FALSE</statusPages>
    </properties>
    <eventArm>
        <eventFinder>
            <name>IRIS_EventDC</name>
            <dns>edu/iris/dmc</dns>
            <boxArea>
                <latitudeRange>
                    <min>-90</min>
                    <max>90</max>
                </latitudeRange>
                <longitudeRange>
                    <min>-180</min>
                    <max>180</max>
                </longitudeRange>
            </boxArea>
            <!-- Depths from 0 to 1000 kilometers are ok, -->
            <originDepthRange>
                <unit>KILOMETER</unit>
                <min>0</min>
                <max>1000</max>
            </originDepthRange>
            <originTimeRange>
                <startTime>20090901T00:00:00.001Z</startTime>
                <endTime>24991231T23:59:59.999Z</endTime>
            </originTimeRange>
            <magnitudeRange>
                <min>5.5</min>
                <max>10.0</max>
            </magnitudeRange>
            <catalog>WHDF</catalog>
            <contributor>NEIC</contributor>
        </eventFinder>
        <removeEventDuplicate/>
        <!-- Print out a line for each successful event -->
        <printlineEventProcess/>
    </eventArm>
    <networkArm>
        <networkFinder>
            <name>IRIS_NetworkDC</name>
            <dns>edu/iris/dmc</dns>
            <!-- recheck channels after some time -->
            <refreshInterval>
                <unit>DAY</unit>
                <value>3</value>
            </refreshInterval>
        </networkFinder>
        <networkEffectiveTimeOverlap>
            <startTime>20050101T00:00:00.001Z</startTime>
            <endTime>24991231T23:59:59.999Z</endTime>
        </networkEffectiveTimeOverlap>
        <stationEffectiveTimeOverlap>
            <startTime>20050101T00:00:00.001Z</startTime>
            <endTime>24991231T23:59:59.999Z</endTime>
        </stationEffectiveTimeOverlap>
        <channelOR>
            <siteCode>  </siteCode>
            <siteCode>00</siteCode>
        </channelOR>
        <channelAND>
            <!-- Accept any channel with B band code -->
            <channelOR>
                <bandCode>B</bandCode>
            </channelOR>
            <gainCode>H</gainCode>
            <channelOR>
                <orientationCode>Z</orientationCode>
                <orientationCode>N</orientationCode>
                <orientationCode>E</orientationCode>
            </channelOR>
            <channelEffectiveTimeOverlap>
                <startTime>20050101T00:00:00.001Z</startTime>
                <endTime>24991231T23:59:59.999Z</endTime>
            </channelEffectiveTimeOverlap>
        </channelAND>
        <printlineChannelProcess/>
    </networkArm>
    <waveformVectorArm>
        <eventStationAND>
            <distanceRange>
                <unit>DEGREE</unit>
                <min>30</min>
                <max>100</max>
            </distanceRange>
            <phaseExists>
                <modelName>prem</modelName>
                <phaseName>P</phaseName>
            </phaseExists>
        </eventStationAND>
        <eventVectorNOT>
            <externalEventVectorSubsetter>
                <classname>edu.sc.seis.receiverFunction.server.RecFuncCacheCheck</classname>
                <gaussianWidth>2.5</gaussianWidth>
            </externalEventVectorSubsetter>
        </eventVectorNOT>
        <phaseRequest>
            <beginPhase>P</beginPhase>
            <beginOffset>
                <unit>SECOND</unit>
                <value>-120</value>
            </beginOffset>
            <endPhase>ttp</endPhase>
            <endOffset>
                <unit>SECOND</unit>
                <value>180</value>
            </endOffset>
        </phaseRequest>
        <fixedDataCenter>
            <name>IRIS_PondDataCenter</name>
            <dns>edu/iris/dmc</dns>
        </fixedDataCenter>
        <ORAvailableDataWrapper>
            <someCoverage/>
        </ORAvailableDataWrapper>
        <noDataGaps/>
        <fullDataCoverage/>
        <threeComponentData/>
        <ORWaveformProcessWrapper>
            <phaseSignalToNoise>
                <modelName>prem</modelName>
                <phaseName>P</phaseName>
                <shortOffsetBegin>
                    <unit>SECOND</unit>
                    <value>-1</value>
                </shortOffsetBegin>
                <shortOffsetEnd>
                    <unit>SECOND</unit>
                    <value>5</value>
                </shortOffsetEnd>
                <longOffsetBegin>
                    <unit>SECOND</unit>
                    <value>-105</value>
                </longOffsetBegin>
                <longOffsetEnd>
                    <unit>SECOND</unit>
                    <value>-5</value>
                </longOffsetEnd>
                <ratio>2.0</ratio>
            </phaseSignalToNoise>
        </ORWaveformProcessWrapper>
        <phaseCut>
            <beginPhase>P</beginPhase>
            <beginOffset>
                <unit>SECOND</unit>
                <value>-30</value>
            </beginOffset>
            <endPhase>P</endPhase>
            <endOffset>
                <unit>SECOND</unit>
                <value>120</value>
            </endOffset>
        </phaseCut>
        <threeComponentData/>
        <rMean/>
        <rTrend/>
        <taper/>
        <responseGain/>
        <filter>
            <lowFreqCorner>
                <value>50</value>
                <unit>SECOND</unit>
            </lowFreqCorner>
            <highFreqCorner>
                <value>5</value>
                <unit>HERTZ</unit>
            </highFreqCorner>
            <numPoles>2</numPoles>
            <filterType>NONCAUSAL</filterType>
        </filter>
        <alwaysSuccess>
            <seismogramAND>
                <seismogramSampling>
                    <min>100</min>
                    <interval>
                        <unit>SECOND</unit>
                        <value>1</value>
                    </interval>
                </seismogramSampling>
                <decimate>5</decimate>
            </seismogramAND>
        </alwaysSuccess>
        <alwaysSuccess>
            <seismogramAND>
                <seismogramSampling>
                    <min>50</min>
                    <interval>
                        <unit>SECOND</unit>
                        <value>1</value>
                    </interval>
                </seismogramSampling>
                <decimate>2</decimate>
            </seismogramAND>
        </alwaysSuccess>
        <externalWaveformVectorProcess>
            <classname>edu.sc.seis.receiverFunction.crust2.Crust2Process</classname>
        </externalWaveformVectorProcess>
        <embeddedEventVector>
            <eventVectorNOT>
                <externalEventVectorSubsetter>
                    <classname>edu.sc.seis.receiverFunction.server.RecFuncCacheCheck</classname>
                    <gaussianWidth>2.5</gaussianWidth>
                </externalEventVectorSubsetter>
            </eventVectorNOT>
        </embeddedEventVector>
        <externalWaveformVectorProcess>
            <classname>edu.sc.seis.receiverFunction.server.RecFuncCacheProcessor</classname>
            <workingDir>RT_recfunc</workingDir>
            <gaussianWidth>2.5</gaussianWidth>
        </externalWaveformVectorProcess>
        <printlineSeismogramProcess/>
    </waveformVectorArm>
</sod>
